Title:  Writeup for Project 2, Summer 2014
Date:  6/23/2014
Group Num 1 : Name            Email            Student ID
              Philip Lee      leephili@usc.edu 3759772007
              Byron Choy	  byroncho@usc.edu 7784820771

I. Requirements:
Implement the system calls and exception handling of fork, exec, yield, and exit. 
Also add in the syscalls for all the functions needed to use Locks and CVs.
Add bullet-proofing to the syscalls.
Implement multiprogramming by adding improving the page table. Also add in process table to keep track of threads and processes.
Implement the hospital program from project 1 as a user program. 

II. Assumptions:
Provided code works, except parts indicated to be changed.
The physical memory size has been increased to match the needed number of pages. (Changed NumPhysPages to 1000)

III. Design:
- This section is to cover your logic and ideas as to how  you are going to solve the problem presented.  This should include a description of classes, algorithms, etc.

addrspace.cc
Addrspace has been changed to use a bitmap to determine which physical page to map to each virtual page when creating the address space.
Functions have been added to easily allocate 8 pages for a new thread or clear up pages by going through the pageTable.

exception.cc
Fork

Exec

Exit

Yield just yields the currentThread as expected.

Input validation was done on the included syscalls and fork/exec by checking to make sure virtual addresses provided were within bounds.
Buffers were checked also by checking that the end point of the buffer is also within the bounds.


IV. Implementation:
+ Files Modified

+ Files added

+ Data Structures added, and the file they were added to.

+ Data Structures modified, and the file they were added to.
-For example,
    class Lock                -- in file threads.cc/threads.h
    {
                //. Modified fields.
    }

+ Functions added and in which file.

+ Functions modified and in which file.

V. Testing:  (For each test case, you must show)
+ How to test
- How to run the test cases, the commands, the arguments and so on.

+ Test Output
- Describe the testing output. You don't have to dump all the output info. Just make sure your description can exactly reflect your output.

VI. Discussion:
+ Experiment expectation.  (What you hope will happen.)

+ Experiment result.  (What actually happens.)

+ Explanation
- Explain your experiment result.

VII. Miscellaneous:
The PhysNumPages has to be increased to a larger number (roughly 1000) for the 2 hospitals to work. 
Current implementation uses 400 + code size / pages for each process.
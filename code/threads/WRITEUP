Title:  Writeup for Project 1, Summer 2014
Date:  6/7/2014
Group Num 1 : Name            Email            Student ID
              Philip Lee      leephili@usc.edu 3759772007
              Byron Choy	  byroncho@usc.edu 7784820771

I. Requirements:
Part 1:
Finish implementing the synchronization classes of Lock and Condition
Part 2:
Create a hospital simulation. Contains at least 20 patients, 2-5 receptionists, 2-5 doorboys, 2-5 doctors, 2-5 cashiers, 2-5 pharmacy clerks, and 1 manager. 

II. Assumptions:
Assuming that the base Nachos code is working as intended.
Part 2 assumes that part 1 was done correctly.


III. Design:
- This section is to cover your logic and ideas as to how  you are going to solve the problem presented.  This should include a description of classes, algorithms, etc.

The hospital design was heavily based on the use of locks and conditions in order to keep the synchronization between the various members


IV. Implementation:

+ Files Modified
synch.h, synch.cc, threadtest.cc
+ Files added
None
+ Data Structures added, and the file they were added to.
None
+ Data Structures modified, and the file they were added to.
	class Lock                -- in file synch.cc/synch.h
	{
		Added isFree boolean, lockOwner thread, and waitlist queue as private variables in synch.h. Filled in Lock constructor and destructor, as well as Acquire and Release functions in synch.cc
	}
    class Condition           -- in file synch.cc/synch.h
    {
    	Added waitlist queue and waiting Lock as private variables. Filled in Condition constructor and destructor, as well as the Wait, Signal, and Broadcast functions.
    }

+ Functions added and in which file.
	Added Patient, Doctor, Receptionist, Door_Boy, Doctor, Cashier, Clerk, Manager, Setup, and Problem2 functions were added to the threadtest.cc file. 

+ Functions modified and in which file.
	None

V. Testing:  (For each test case, you must show)
+ How to test
- How to run the test cases, the commands, the arguments and so on.

+ Test Output
- Describe the testing output. You don't have to dump all the output info. Just make sure your description can exactly reflect your output.

VI. Discussion:
+ Experiment expectation.  (What you hope will happen.)


+ Experiment result.  (What actually happens.)

+ Explanation
- Explain your experiment result.

VII. Miscellaneous:

Since the hospital manager does not stop running, even when the patients all leave, the output log will be filled with the outputs from it. Comment out lines # and # in order to leave out the money made by the hospital.